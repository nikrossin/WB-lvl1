package main

import "fmt"

func quickSort(arr []int) {
	right := len(arr) - 1 //правая граница сортировки
	left := 0             //левая граница сортировки
	if left < right {     //условие конца общей сортировки, если часть массива в один элемент
		point := arr[len(arr)/2] // выбор опорного элемента в качестве центра
		for left <= right {      //пока границы не сошлись
			for arr[left] < point { //если значение левой границы меньше опорного элемента
				left++ //  левая границы ->
			}
			for arr[right] > point { //если значение правой границы больше опорного элемента
				right-- //правая границы <-
			}
			if left <= right { //если  границы не сошлись и значения границ уже не на своих половинах
				arr[left], arr[right] = arr[right], arr[left] //меняем их местами и двигаем
				left++
				right--
			}
		}
		//получили что все элементы левой половины от опорного элемента меньше всех элементов правой
		//части, таким образом дробим массив дальше на кусочки для сортировки.
		quickSort(arr[:right+1])
		quickSort(arr[left:])
	}
}

func main() {

	arr := []int{5, 3, 8, 1, 2, 1, 1, 1, 1, 1, 9, 0, 76, 3}
	quickSort(arr)
	fmt.Println(arr)
}
